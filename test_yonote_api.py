#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API Yonote
"""

import asyncio
import aiohttp
import json
from datetime import datetime

# –¢–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
TEST_TOKEN = "YOUR_YONOTE_API_TOKEN_HERE"
API_BASE = "https://app.yonote.ru/api"

async def test_api_endpoint(session, endpoint, data=None):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint"""
    url = f"{API_BASE}/{endpoint}"
    headers = {
        'Authorization': f'Bearer {TEST_TOKEN}',
        'Content-Type': 'application/json',
        'Accept': 'application/json'
    }
    
    print(f"\nüì° –¢–µ—Å—Ç–∏—Ä—É–µ–º: {endpoint}")
    print(f"URL: {url}")
    
    try:
        async with session.post(url, json=data or {}, headers=headers) as resp:
            print(f"–°—Ç–∞—Ç—É—Å: {resp.status}")
            
            if resp.status == 200:
                response_data = await resp.json()
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ")
                print(f"–û—Ç–≤–µ—Ç: {json.dumps(response_data, indent=2, ensure_ascii=False)[:500]}...")
                return response_data
            else:
                error_text = await resp.text()
                print(f"‚ùå –û—à–∏–±–∫–∞: {error_text}")
                return None
                
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return None

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API Yonote")
    print(f"–¢–æ–∫–µ–Ω: {TEST_TOKEN[:10]}...")
    
    async with aiohttp.ClientSession() as session:
        # –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        auth_info = await test_api_endpoint(session, "auth.info")
        
        if not auth_info or not auth_info.get('ok'):
            print("\n‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω.")
            return
        
        print(f"\n‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
        user_info = auth_info.get('data', {}).get('user', {})
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"Email: {user_info.get('email', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
        print("\n" + "="*50)
        events = await test_api_endpoint(session, "events.list", {"limit": 10})
        
        if events and events.get('ok') and events.get('data'):
            print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events['data'])}")
            
            for i, event in enumerate(events['data'][:3], 1):
                print(f"\nüî∏ –°–æ–±—ã—Ç–∏–µ {i}:")
                print(f"  ID: {event.get('id', 'N/A')}")
                print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {event.get('name', 'N/A')}")
                print(f"  –î–∞—Ç–∞: {event.get('createdAt', 'N/A')}")
                
                if 'actor' in event:
                    actor = event['actor']
                    print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {actor.get('name', 'N/A')}")
                
                if 'documentId' in event:
                    print(f"  ID –¥–æ–∫—É–º–µ–Ω—Ç–∞: {event['documentId']}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        print("\n" + "="*50)
        documents = await test_api_endpoint(session, "documents.list", {"limit": 5})
        
        if documents and documents.get('ok') and documents.get('data'):
            print(f"\nüìÑ –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {len(documents['data'])}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–≤–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ
            first_doc = documents['data'][0]
            doc_id = first_doc.get('id')
            
            if doc_id:
                print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ: {doc_id}")
                doc_info = await test_api_endpoint(session, "documents.info", {"id": doc_id})
                
                if doc_info and doc_info.get('ok'):
                    doc_data = doc_info.get('data', {})
                    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {doc_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
                    print(f"URL: https://app.yonote.ru/doc/{doc_id}")
                    
                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
                    print(f"\nüí¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...")
                    comments = await test_api_endpoint(session, "comments.list", {"id": doc_id})
                    
                    if comments and comments.get('ok'):
                        comments_data = comments.get('data', [])
                        print(f"–ù–∞–π–¥–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {len(comments_data)}")
                        
                        for comment in comments_data[:2]:
                            print(f"  - {comment.get('data', '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞')[:100]}...")
        
        print("\n" + "="*50)
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π:")
        print("python bot.py")

if __name__ == "__main__":
    asyncio.run(main()) 